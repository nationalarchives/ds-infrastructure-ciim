{
  "#type": "chain",
  "chain": [
    {
      "#type": "merge",
      "values": [
        "$.results.datasets.elasticsearchEtna",
        {
          "stats": "$.results.stats"
        }
      ]
    },
    {
      "data": {
        "#type": "fallback",
        "strategies": [
          {
            "#type": "as_list",
            "values": {
              "#type": "for_each",
              "values": "$.data",
              "spec": {
                "@template": {
                  "details": {
                    "iaid": "$.source.identifier..__iaid",
                    "cleanSummaryTitle": {
                      "#type": "regex_replace",
                      "value": {
                        "#type": "fallback",
                        "strategies": [
                          "[R]$.source.highlight['summary.title']",
                          "$.source.summary.title"
                        ]
                      },
                      "pattern": "<(?!/?mark\\b)[^>]+>",
                      "replacement": ""
                    },
                    "summaryTitle": {
                      "#type": "fallback",
                      "strategies": [
                        "[R]$.source.highlight['summary.title']",
                        "$.source.summary.title"
                      ]
                    },
                    "title": "$.source.title[?(@.primary == true)].value",
                    "cleanDescription": {
                      "#type": "regex_replace",
                      "value": {
                        "#type": "fallback",
                        "strategies": [
                          "[R]$.source.highlight['description.raw'][0]",
                          "$.source.description[0].raw",
                          "[R]$.source.highlight['description.value'][0]",
                          "$.source.description[0].value"
                        ]
                      },
                      "pattern": "<(?!/?mark\\b)[^>]+>",
                      "replacement": ""
                    },
                    "description": {
                      "#type": "fallback",
                      "strategies": [
                        "[R]$.source.highlight['description.value']",
                        "$.source.description[0].value"
                      ]
                    },
                    "dateCovering": "$.source.origination.date.value",
                    "heldBy": "$.source.repository.name.value",
                    "referenceNumber": "$.source.@template.details.referenceNumber",
                    "subjects": "$.source.subjects.subject[*].summary.title"
                  }
                }
              }
            }
          },
          []
        ]
      },
      "errors": {
        "#type": "fallback",
        "strategies": [
          {
            "#type": "as_list",
            "values": {
              "#type": "flatten",
              "values": [
                "$$.results.errors",
                "$$.aggs.errors",
                "$$.results.datasets.elasticsearch.errors",
                "$$.aggs.datasets.elasticsearch.errors"
              ]
            }
          },
          []
        ]
      },
      "aggregations": {
        "#type": "chain",
        "chain": [
          {
            "#type": "group",
            "values": "$.aggregations",
            "by": "$.name",
            "yield_group": {
              "#type": "merge",
              "values": "$"
            }
          },
          {
            "#type": "fallback",
            "strategies": [
              {
                "#type": "for_each",
                "values": {
                  "#type": "entries",
                  "map": "$"
                },
                "spec": "$.value"
              },
              []
            ]
          }
        ]
      },
      "stats": {
        "total": "$.stats.total",
        "results": "$$.results.stats.results",
        "providers": "$.stats.providers",
        "latency": {
          "#type": "chain",
          "chain": [
            {
              "#type": "as_list",
              "values": [
                "$$.results.stats.latency",
                "$$.aggs.stats.latency"
              ]
            },
            "$.sum()"
          ]
        }
      },
      "found": "$.found",
      "buckets": {
        "#type": "fallback",
        "strategies": [
          {
            "#type": "as_list",
            "values": {
              "#type": "flatten",
              "values": [
                "$$.aggs.datasets.elasticsearchEtna.aggregations"
              ]
            }
          },
          []
        ]
      }
    }
  ]
}