type Query {
    metadataById(id: ID!) : [Metadata]
    metadata(query: String, ids: [String], aggs: [String], from: Int, size: Int, field: String, filter: String, sort: String): [Metadata]
}

type TypedValue {
    primary: Boolean
    value: String
    type: String
}

type Enrichment {
    value: String
    url: String
}

type Measurement{
    dimension: String
    value: String
}

type Metadata{
    id: String
    title: String
    identifier: [TypedValue]
    name: [String]
    description: [String]
    datatype: String
    maker: [String]
    parent: [Metadata]
    children(query: String, ids: [String],from: Int, size: Int, field: String, filter: String, sort: String): [Metadata]
    enrichment_location: [Enrichment]
    enrichment_date: [String]
    enrichment_misc: [Enrichment]
    enrichment_org: [Enrichment]
    enrichment_person: [Enrichment]
    repository: String
    subject: [String]
    level: String
    hierarchy(query: String, from: Int, size: Int, field: String, filter: String, sort: String): [Metadata]
    community: [Metadata]
    institution: [String]
    legal: String
    organisation: String
    place: String
    creation_date: String
    collection: [Metadata]
    collectionMorrab: [Metadata]
    collectionSurrey: [Metadata]
    colour: String
    condition: String
    coordinates_lat: String
    coordinates_lon: String
    copies: String
    publisher: String
    inscription: [String]
    legal_holder: String
    licence: String
    measurements: [Measurement]
    place_hierarchy: String
    provenance: String
    related_material: String
}